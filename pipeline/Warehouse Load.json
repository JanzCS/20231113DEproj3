{
	"name": "Warehouse Load",
	"properties": {
		"activities": [
			{
				"name": "Create SQL Schema",
				"description": "Create all of the tables that are in our Synapse Data Warehouse",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Drop Tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "20231113-synapse-workspace-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "Project3DW"
					}
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "CREATE SCHEMA Prod"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Load Data into Tables",
				"description": "Load the data from gold layer into our create tables",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Create SQL Tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "20231113-synapse-workspace-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "Project3DW"
					}
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "COPY INTO Prod.DimAgency\nFROM 'https://20231113desa.dfs.core.windows.net/gold-layer/project=3/usa_spending/agency/*.parquet'\nWITH (\n    FILE_TYPE = 'parquet',\n    CREDENTIAL = (IDENTITY='Managed Identity')\n)\n\nCOPY INTO Prod.DimCongressionalDistrict\nFROM 'https://20231113desa.dfs.core.windows.net/gold-layer/project=3/usa_spending/cd/*.parquet'\nWITH (\n    FILE_TYPE = 'parquet',\n    CREDENTIAL = (IDENTITY='Managed Identity')\n)\n\nCOPY INTO Prod.DimHighlyCompensatedOfficer\nFROM 'https://20231113desa.dfs.core.windows.net/gold-layer/project=3/usa_spending/hco/*.parquet'\nWITH (\n    FILE_TYPE = 'parquet',\n    CREDENTIAL = (IDENTITY='Managed Identity')\n)\n\nCOPY INTO Prod.DimCountry\nFROM 'https://20231113desa.dfs.core.windows.net/gold-layer/project=3/usa_spending/country/*.parquet'\nWITH (\n    FILE_TYPE = 'parquet',\n    CREDENTIAL = (IDENTITY='Managed Identity')\n)\n\nCOPY INTO Prod.DimRecipient\nFROM 'https://20231113desa.dfs.core.windows.net/gold-layer/project=3/usa_spending/recipient/*.parquet'\nWITH (\n    FILE_TYPE = 'parquet',\n    CREDENTIAL = (IDENTITY='Managed Identity')\n)\n\nCOPY INTO Prod.DimState\nFROM 'https://20231113desa.dfs.core.windows.net/gold-layer/project=3/usa_spending/state/*.parquet'\nWITH (\n    FILE_TYPE = 'parquet',\n    CREDENTIAL = (IDENTITY='Managed Identity')\n)\n\nCOPY INTO Prod.DimCounty\nFROM 'https://20231113desa.dfs.core.windows.net/gold-layer/project=3/usa_spending/county/*.parquet'\nWITH (\n    FILE_TYPE = 'parquet',\n    CREDENTIAL = (IDENTITY='Managed Identity')\n)\n\nCOPY INTO Prod.DimDate\nFROM 'https://20231113desa.dfs.core.windows.net/gold-layer/project=3/usa_spending/date/*.parquet'\nWITH (\n    FILE_TYPE = 'parquet',\n    CREDENTIAL = (IDENTITY='Managed Identity')\n)\n\nCOPY INTO Prod.FactAssistance\nFROM 'https://20231113desa.dfs.core.windows.net/gold-layer/project=3/usa_spending/assistance/*.parquet'\nWITH (\n    FILE_TYPE = 'parquet',\n    CREDENTIAL = (IDENTITY='Managed Identity')\n)\n\nCOPY INTO Prod.FactTransaction\nFROM 'https://20231113desa.dfs.core.windows.net/gold-layer/project=3/usa_spending/transaction/*.parquet'\nWITH (\n    FILE_TYPE = 'parquet',\n    CREDENTIAL = (IDENTITY='Managed Identity')\n)\n\nCOPY INTO Prod.DimBusinessSize\nFROM 'https://20231113desa.dfs.core.windows.net/gold-layer/project=3/usa_spending/business_size/*.parquet'\nWITH (\n    FILE_Type = 'parquet',\n    CREDENTIAL = (IDENTITY='Managed Identity')\n)\n\nCOPY INTO Prod.DimNAICS\nFROM 'https://20231113desa.dfs.core.windows.net/gold-layer/project=3/usa_spending/naics/*.parquet'\nWITH (\n    FILE_Type = 'parquet',\n    CREDENTIAL = (IDENTITY='Managed Identity')\n)\n\nCOPY INTO Prod.DimCountryOfOrigin\nFROM 'https://20231113desa.dfs.core.windows.net/gold-layer/project=3/usa_spending/country_of_origin/*.parquet'\nWITH (\n    FILE_Type = 'parquet',\n    CREDENTIAL = (IDENTITY='Managed Identity')\n)\n\nCOPY INTO Prod.FactContract\nFROM 'https://20231113desa.dfs.core.windows.net/gold-layer/project=3/usa_spending/contract/**'\nWITH (\n    FILE_Type = 'parquet',\n    CREDENTIAL = (IDENTITY='Managed Identity')\n)\n\nCOPY INTO Prod.DimCFDA\nFROM 'https://20231113desa.dfs.core.windows.net/gold-layer/project=3/usa_spending/cfda/**'\nWITH (\n    FILE_Type = 'parquet',\n    CREDENTIAL = (IDENTITY='Managed Identity')\n)\n\nCOPY INTO Prod.DimOffice\nFROM 'https://20231113desa.dfs.core.windows.net/gold-layer/project=3/usa_spending/office/**'\nWITH (\n    FILE_Type = 'parquet',\n    CREDENTIAL = (IDENTITY='Managed Identity')\n)\n\nCOPY INTO Prod.DimprimaryPlaceOfPerformanceScope\nFROM 'https://20231113desa.dfs.core.windows.net/gold-layer/project=3/usa_spending/primary_place_of_performance_scope/**'\nWITH (\n    FILE_Type = 'parquet',\n    CREDENTIAL = (IDENTITY='Managed Identity')\n)\n\n\n\n\n"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Drop Tables",
				"description": "Drop all tables and schema currently in the data warehouse",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "20231113-synapse-workspace-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "Project3DW"
					}
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "DROP VIEW IF EXISTS [Prod].[ViewAgenciesByDay]\nDROP VIEW IF EXISTS [Prod].[ViewIndustriesByDay]\nDROP VIEW IF EXISTS [Prod].[ViewSummaryByAward]\nDROP VIEW IF EXISTS [Prod].[ViewSummaryTotalsByDay]\nDROP VIEW IF EXISTS [Prod].[ViewSummaryTotalsByMonth]\n\nIF OBJECT_ID('Prod.DimBusinessSize', 'U') IS NOT NULL \n  DROP TABLE Prod.DimBusinessSize;\nIF OBJECT_ID('Prod.DimCFDA', 'U') IS NOT NULL \n  DROP TABLE Prod.DimCFDA;\nIF OBJECT_ID('Prod.DimCountryOfOrigin', 'U') IS NOT NULL \n  DROP TABLE Prod.DimCountryOfOrigin;\nIF OBJECT_ID('Prod.DimNAICS', 'U') IS NOT NULL \n  DROP TABLE Prod.DimNAICS;\nIF OBJECT_ID('Prod.DimOffice', 'U') IS NOT NULL \n  DROP TABLE Prod.DimOffice;\nIF OBJECT_ID('Prod.DimPrimaryPlaceOfPerformanceScope', 'U') IS NOT NULL \n  DROP TABLE Prod.DimPrimaryPlaceOfPerformanceScope;\nIF OBJECT_ID('Prod.FactContract', 'U') IS NOT NULL \n  DROP TABLE Prod.FactContract;\n\n\nIF OBJECT_ID('Prod.DimAgency', 'U') IS NOT NULL \n  DROP TABLE Prod.DimAgency;\nIF OBJECT_ID('Prod.DimCongressionalDistrict', 'U') IS NOT NULL \n  DROP TABLE Prod.DimCongressionalDistrict;\nIF OBJECT_ID('Prod.DimHighlyCompensatedOfficer', 'U') IS NOT NULL \n  DROP TABLE Prod.DimHighlyCompensatedOfficer;\nIF OBJECT_ID('Prod.DimCountry', 'U') IS NOT NULL \n  DROP TABLE Prod.DimCountry;\nIF OBJECT_ID('Prod.DimRecipient', 'U') IS NOT NULL \n  DROP TABLE Prod.DimRecipient;\nIF OBJECT_ID('Prod.DimState', 'U') IS NOT NULL \n  DROP TABLE Prod.DimState;\nIF OBJECT_ID('Prod.DimCounty', 'U') IS NOT NULL \n  DROP TABLE Prod.DimCounty;\nIF OBJECT_ID('Prod.DimDate', 'U') IS NOT NULL \n  DROP TABLE Prod.DimDate;\nIF OBJECT_ID('Prod.FactTransaction', 'U') IS NOT NULL \n  DROP TABLE Prod.FactTransaction;\nIF OBJECT_ID('Prod.FactAssistance', 'U') IS NOT NULL \n  DROP TABLE Prod.FactAssistance;\n\n-- DROP TABLE IF EXISTS Prod.DimBusinessSize;\n-- DROP TABLE IF EXISTS Prod.DimCFDA;\n-- DROP TABLE IF EXISTS Prod.DimCountryOfOrigin;\n-- DROP TABLE IF EXISTS Prod.DimNAICS;\n-- DROP TABLE IF EXISTS Prod.DimOffice;\n-- DROP TABLE IF EXISTS Prod.DimPrimaryPlaceOfPerformanceScope\n-- DROP TABLE IF EXISTS Prod.FactContract;\n\n-- DROP TABLE IF EXISTS Prod.DimAgency;\n-- DROP TABLE IF EXISTS Prod.DimCongressionalDistrict;\n-- DROP TABLE IF EXISTS Prod.DimHighlyCompensatedOfficer;\n-- DROP TABLE IF EXISTS Prod.DimCountry;\n-- DROP TABLE IF EXISTS Prod.DimRecipient;\n-- DROP TABLE IF EXISTS Prod.DimState;\n-- DROP TABLE IF EXISTS Prod.DimCounty;\n-- DROP TABLE IF EXISTS Prod.DimDate;\n-- DROP TABLE IF EXISTS Prod.FactTransaction;\n-- DROP TABLE IF EXISTS Prod.FactAssistance;\n\n-- IF OBJECT_ID('Prod') IS NOT NULL \n--   DROP SCHEMA Prod;\n\nIF EXISTS (SELECT name FROM sys.schemas WHERE name = 'Prod')\nBEGIN \nDROP SCHEMA Prod\nEND"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Create SQL Tables",
				"description": "Create all of the tables that are in our Synapse Data Warehouse",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Create SQL Schema",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "20231113-synapse-workspace-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "Project3DW"
					}
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "CREATE TABLE Prod.DimAgency(\n    agency_code VARCHAR(8000),\n    agency_name VARCHAR(8000)\n)\nWITH\n(\n    DISTRIBUTION = REPLICATE,\n    CLUSTERED INDEX(agency_code)\n);\n\n-- CREATE TABLE DimDisasterEmergencyFund (\n--     disaster_emergency_fund_code VARCHAR(8000) PRIMARY KEY,\n--     code_name VARCHAR(8000) NOT NULL\n-- )\n\n-- CREATE TABLE DimObjectClass (\n--     object_class_code BIGINT PRIMARY KEY,\n--     object_class_name VARCHAR(8000) NOT NULL\n-- )\n\nCREATE TABLE Prod.DimCongressionalDistrict(\n    cd_original VARCHAR(8000),\n    cd_code BIGINT,--VARCHAR(8000),\n    party_2018 VARCHAR(8000),\n    party_2020 VARCHAR(8000),\n    party_2022 VARCHAR(8000)\n)\nWITH\n(\n    DISTRIBUTION = REPLICATE,\n    CLUSTERED INDEX(cd_code)\n);\n\nCREATE TABLE Prod.DimHighlyCompensatedOfficer(\n    hco_name VARCHAR(8000),\n    hco_code BIGINT\n)\nWITH\n(\n    DISTRIBUTION = REPLICATE,\n    CLUSTERED INDEX(hco_code)\n);\n\nCREATE TABLE Prod.DimCountry(\n    country_code VARCHAR(8000),\n    country_name VARCHAR(8000)\n)\nWITH\n(\n    DISTRIBUTION = REPLICATE,\n    CLUSTERED INDEX(country_code)\n);\n\nCREATE TABLE Prod.DimRecipient(\n    recipient_uei VARCHAR(8000),\n    recipient_name_raw VARCHAR(8000)\n)\nWITH\n(\n    DISTRIBUTION = REPLICATE,\n    CLUSTERED INDEX(recipient_uei)\n);\n\nCREATE TABLE Prod.DimState (\n    --state_fips VARCHAR(8000) PRIMARY KEY, -- DF does not have this column\n    state_abbreviation VARCHAR(8000),\n    state_name VARCHAR(8000)\n)\nWITH\n(\n    DISTRIBUTION = REPLICATE,\n    CLUSTERED INDEX(state_abbreviation)\n);\n\nCREATE TABLE Prod.DimCounty(\n    county_fips VARCHAR(8000),\n    less_than_hs_17_21 INT,\n    hs_only_17_21 INT,\n    some_college_17_21 INT,\n    bach_or_higher_17_21 INT,\n    perc_less_than_hs_17_21 FLOAT(53),\n    perc_hs_only_17_21 FLOAT(53),\n    perc_some_college_17_21 FLOAT(53),\n    perc_bach_or_higher_17_21 FLOAT(53),\n    stname VARCHAR(8000),\n    ctyname VARCHAR(8000),\n    gdp_2019 INT, \n    gdp_2020 INT, \n    gdp_2021 INT,\n    gdp_2022 INT, \n    popestimate2019 INT,\n    popestimate2020 INT,\n    popestimate2021 INT,\n    popestimate2022 INT,\n    party_2016 VARCHAR(8000),\n    party_2020 VARCHAR(8000)\n)\nWITH\n(\n    DISTRIBUTION = REPLICATE,\n    CLUSTERED INDEX(county_fips)\n);\n\nCREATE TABLE Prod.DimDate(\n    date_key INT,\n    calendar_date DATE,\n    calendar_year INT,\n    calendar_month VARCHAR(15),\n    month_of_year INT,\n    calendar_day VARCHAR(15),\n    day_of_week INT,\n    is_weekday VARCHAR(12),\n    day_of_month INT,\n    last_day_of_month VARCHAR(12),\n    week_of_year_iso INT,\n    quarter_of_year INT,\n    fiscal_year INT,\n    fiscal_month INT\n)\nWITH\n(\n    DISTRIBUTION = REPLICATE,\n    CLUSTERED INDEX(date_key)\n);\n\n-- Write Office Table\n-- Write Cfda Table\n-- Write Primary Place of Performance\n\nCREATE TABLE Prod.FactAssistance(\n    transaction_unique_key VARCHAR(8000),\n    award_unique_key VARCHAR(8000),\n    cfda_number VARCHAR(8000),\n    face_value_of_loan DECIMAL(18,2),\n    total_face_value_of_loan DECIMAL(18,2),\n    original_loan_subsidy_cost DECIMAL(18,2),\n    total_loan_subsidy_cost DECIMAL(18,2),\n    primary_place_of_performance_scope_code BIGINT--VARCHAR(8000)\n)\nWITH\n(\n    DISTRIBUTION = HASH(transaction_unique_key),\n    CLUSTERED COLUMNSTORE INDEX\n);\n\nCREATE TABLE Prod.FactTransaction(\n    transaction_unique_key VARCHAR(8000),\n    total_outlayed_amount_for_overall_award DECIMAL(18,2),\n    prime_award_transaction_place_of_performance_county_fips_code VARCHAR(8000),\n    highly_compensated_officer_4_amount DECIMAL(18,2),\n    outlayed_amount_from_COVID_19_supplementals_for_overall_award VARCHAR(8000), --DECIMAL(18,2), -- DF has this as a String\n    modification_number VARCHAR(8000), -- Consider Removal\n    funding_office_code VARCHAR(8000),\n    prime_award_transaction_place_of_performance_state_fips_code VARCHAR(8000),\n    award_type VARCHAR(8000),\n    recipient_uei VARCHAR(8000),\n    awarding_agency_code VARCHAR(8000),\n    primary_place_of_performance_country_code VARCHAR(8000),\n    funding_agency_code VARCHAR(8000),\n    action_type_code VARCHAR(8000),\n    highly_compensated_officer_2_amount DECIMAL(18,2),\n    recipient_parent_uei VARCHAR(8000), -- Consider Removal\n    highly_compensated_officer_1_amount DECIMAL(18,2),\n    highly_compensated_officer_3_amount DECIMAL(18,2),\n    recipient_state_code VARCHAR(8000),\n    program_activities_funding_this_award VARCHAR(8000),\n    award_unique_key VARCHAR(8000),\n    prime_award_transaction_place_of_performance_cd_original VARCHAR(8000),\n    recipient_city_name VARCHAR(8000), -- consider moving to recipient table\n    prime_award_transaction_recipient_cd_current VARCHAR(8000),\n    total_obligated_amount DECIMAL(18,2),\n    highly_compensated_officer_5_amount DECIMAL(18,2),\n    obligated_amount_from_COVID_19_supplementals_for_overall_award VARCHAR(8000), --DECIMAL(18,2), -- DF has this as a String\n    recipient_country_code VARCHAR(8000),\n    prime_award_transaction_recipient_county_fips_code VARCHAR(8000),\n    awarding_office_code VARCHAR(8000),\n    recipient_parent_name_raw VARCHAR(8000), -- Consider Removal\n    prime_award_transaction_recipient_state_fips_code VARCHAR(8000),\n    federal_action_obligation DECIMAL(18,2),\n    action_date_key INT,\n    last_modified_key INT,\n    recipient_cd_code BIGINT,\n    place_of_performance_cd_code BIGINT,\n    highly_compensated_officer_1_code BIGINT,\n    highly_compensated_officer_2_code BIGINT,\n    highly_compensated_officer_3_code BIGINT,\n    highly_compensated_officer_4_code BIGINT,\n    highly_compensated_officer_5_code BIGINT\n    -- funding_sub_agency_code VARCHAR(8000) NOT NULL,\n    -- object_class_code INT,\n    -- disaster_emergency_fund_codes_for_overall_award VARCHAR(8000),\n    -- primary_place_of_performance_zip_4 VARCHAR(8000),\n    -- primary_place_of_performance_city_name VARCHAR(8000),\n    -- prime_award_transaction_place_of_performance_cd_current VARCHAR(8000),\n    -- funding_sub_agency_name VARCHAR(8000),\n    -- awarding_sub_agency_name VARCHAR(8000),\n    -- awarding_sub_agency_code VARCHAR(8000),\n    -- last_modified_date VARCHAR(8000) NOT NULL,\n)\nWITH\n(\n    DISTRIBUTION = HASH(transaction_unique_key),\n    CLUSTERED COLUMNSTORE INDEX\n);\n\nCREATE TABLE Prod.DimBusinessSize\n(\n    business_size_key INT,\n    business_size_code CHAR(1) NOT NULL,\n    business_size VARCHAR(8000)\n)\nWITH\n(\n    DISTRIBUTION = REPLICATE,\n    CLUSTERED INDEX(business_size_key)\n);\n\nCREATE TABLE Prod.DimNAICS\n(\n    naics_key INT,\n    naics_code VARCHAR(8000),\n    naics_description VARCHAR(8000)\n)\nWITH\n(\n    DISTRIBUTION = REPLICATE,\n    CLUSTERED INDEX(naics_key)\n);\n\nCREATE TABLE Prod.DimCountryOfOrigin\n(\n    country_of_origin_key INT,\n    country_of_origin_code VARCHAR(8000),\n    country_of_origin VARCHAR(8000)\n)\nWITH\n(\n    DISTRIBUTION = REPLICATE,\n    CLUSTERED INDEX(country_of_origin_key)\n);\n\nCREATE TABLE Prod.FactContract\n(\n    transaction_unique_key VARCHAR(8000) NOT NULL,\n    award_unique_key VARCHAR(8000),\n    naics_key INT,\n    country_of_origin_key INT,\n    business_size_key INT\n   \n)\nWITH\n(\n    DISTRIBUTION = HASH(transaction_unique_key),\n    CLUSTERED COLUMNSTORE INDEX\n);\n\nCREATE TABLE Prod.DimCFDA\n(\n    cfda_number VARCHAR(8000) NOT NULL,\n    cfda_title VARCHAR(8000)\n)\nWITH\n(\n    DISTRIBUTION = REPLICATE,\n    CLUSTERED INDEX(cfda_number)\n);\n\nCREATE TABLE Prod.DimOffice\n(\n    office_code VARCHAR(8000),\n    office_name VARCHAR(8000)\n)\nWITH\n(\n    DISTRIBUTION = REPLICATE,\n    CLUSTERED INDEX(office_code)\n);\n\nCREATE TABLE Prod.DimPrimaryPlaceOfPerformanceScope\n(\n    primary_place_of_performance_scope VARCHAR(8000),\n    primary_place_of_performance_scope_code BIGINT\n)\nWITH\n(\n    DISTRIBUTION = REPLICATE,\n    CLUSTERED INDEX(primary_place_of_performance_scope_code)\n);"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"annotations": []
	}
}